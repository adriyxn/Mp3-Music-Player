/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package musicdisc;

import jaco.mp3.player.MP3Player;
import java.io.File;
import java.nio.file.Paths;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.Line;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.Mixer;

/**
 *
 * @author Adriyan
 */
public class DarkMode extends javax.swing.JFrame {

    /**
     * Creates new form DarkMode
     */
    
    MP3Player player;
    
    File songfile;
    
    String currentDirectory = "home.user";
    
    String currentpath;
    String imagepath;
    String appname = "musicDisc";
    
    boolean repeat = false;
    int xMouse, yMouse;
    
    public DarkMode() {
        initComponents();
        
        lbl_appname.setText(appname);
        songfile = new File("E:\\Java Projects\\Mp3 Player\\changes- jb.mp3");
        String filename = songfile.getName();
        lbl_songname.setText(filename);
        
        player = mp3player();
        player.addToPlayList(songfile);
        
        currentpath = Paths.get(".").toAbsolutePath().normalize().toString();
        imagepath = "";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbl_songname = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbl_appname = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(65, 65, 65));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 238, 255));
        jLabel1.setText("Justin Bieber");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, -1, -1));

        lbl_songname.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        lbl_songname.setForeground(new java.awt.Color(0, 238, 255));
        lbl_songname.setText("Changes");
        jPanel1.add(lbl_songname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, 48));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicdisc/Justin_Bieber_-_Changes.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicdisc/repeat.png"))); // NOI18N
        jLabel3.setToolTipText("");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 470, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicdisc/home.png"))); // NOI18N
        jLabel5.setToolTipText("");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicdisc/mode.png"))); // NOI18N
        jLabel6.setToolTipText("");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicdisc/play.png"))); // NOI18N
        jLabel7.setToolTipText("");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 470, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicdisc/fav.png"))); // NOI18N
        jLabel8.setToolTipText("");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicdisc/next.png"))); // NOI18N
        jLabel9.setToolTipText("");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 470, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicdisc/back.png"))); // NOI18N
        jLabel10.setToolTipText("");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 470, -1, -1));

        lbl_appname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_appname.setForeground(new java.awt.Color(0, 238, 255));
        lbl_appname.setText("jLabel11");
        jPanel1.add(lbl_appname, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 380, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        player.play();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        if(repeat == false){
            repeat = true;
            player.setRepeat(repeat);
            
        }else if (repeat == true){
            repeat = false;
            player.setRepeat(repeat);
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x, y);
    }//GEN-LAST:event_jPanel1MouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DarkMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DarkMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DarkMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DarkMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DarkMode().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_appname;
    private javax.swing.JLabel lbl_songname;
    // End of variables declaration//GEN-END:variables

    private MP3Player mp3player(){
        MP3Player mp3pay = new MP3Player();
        return mp3pay;
    }
    
    
    ////volume down
    private void volumedown(Double valuetoplusminus) throws LineUnavailableException{
        
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        
        for(Mixer.Info MixerInfo : mixers){
        Mixer mixer = AudioSystem.getMixer(MixerInfo);
        Line.Info[] lineInfos = mixer.getTargetLineInfo();
        
        for(Line.Info lineInfo : lineInfos){
            Line line = null;
            
            boolean opened = true;
            
            try{
                line = mixer.getLine(lineInfo);
                opened = line.isOpen() || line instanceof clip;
                 
                if(!opened){
                    line.open();
                }
                FloatControl volcontrol = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                float currentVolume = volcontrol.getValue();
                Double volumeToCut = valuetoplusminus;
                float changedCal = (float) ((float)currentVolume-(double)volumeToCut);
                volcontrol.setValue(changedCal);
                
                
            }
            catch(IllegalArgumentException er){
            }finally{
                if(line != null && !opened){
                    line.close();
                }
            }
        }
    }
        
    }
    
    
    //volume up
    private void volumeup(Double valuetoplusminus) throws LineUnavailableException{
        
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        
        for(Mixer.Info MixerInfo : mixers){
        Mixer mixer = AudioSystem.getMixer(MixerInfo);
        Line.Info[] lineInfos = mixer.getTargetLineInfo();
        
        for(Line.Info lineInfo : lineInfos){
            Line line = null;
            
            boolean opened = true;
            
            try{
                line = mixer.getLine(lineInfo);
                opened = line.isOpen() || line instanceof Clip;
                
                if(!opened){
                    line.open();
                }
                FloatControl volcontrol = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                float currentVolume = volcontrol.getValue();
                Double volumeToCut = valuetoplusminus;
                float changedCal = (float) ((float)currentVolume+(double)volumeToCut);
                volcontrol.setValue(changedCal);
                
                
            }
            catch(IllegalArgumentException er){
            }finally{
                if(line != null && !opened){
                    line.close();
                }
            }
        }
    }
        
    }
    
    
    private void volumecontrol(Double valuetoplusminus) throws LineUnavailableException{
        
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        
        for(Mixer.Info MixerInfo : mixers){
        Mixer mixer = AudioSystem.getMixer(MixerInfo);
        Line.Info[] lineInfos = mixer.getTargetLineInfo();
        
        for(Line.Info lineInfo : lineInfos){
            Line line = null;
            
            boolean opened = true;
            
            try{
                line = mixer.getLine(lineInfo);
                opened = line.isOpen() || line instanceof Clip;
                
                if(!opened){
                    line.open();
                }
                FloatControl volcontrol = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                float currentVolume = volcontrol.getValue();
                Double volumeToCut = valuetoplusminus;
                float changedCal = (float) ((double)volumeToCut);
                volcontrol.setValue(changedCal);
                
                
            }
            catch(IllegalArgumentException er){
            }finally{
                if(line != null && !opened){
                    line.close();
                }
            }
        }
    }
        
    }
    
        
}
